buildscript {
    ext {
        springBootVersion = '1.3.3.RELEASE'
		springCFCloudVersion = '1.1.1.RELEASE'
		springSecurityVersion = '4.0.1.RELEASE'
		springVersion = '4.1.6.RELEASE'
		springEurekaVersion = '1.0.6.RELEASE'
    	springCloudStarterParentTrain = 'Angel.SR3'
		junitVersion = '4.12'
		jacksonVersion = '2.5.3'
		mysqlVersion = '5.1.35'
		bootstrapVersion = '2.3.2'
    }

    repositories {
        mavenCentral()
	    maven {
	        url 'https://repo.spring.io/libs-snapshot'
	    }
    }

    buildscript {
        dependencies {
            classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
            classpath "io.spring.gradle:dependency-management-plugin:0.5.1.RELEASE"
        }
    }
}


// Apply versioning to all projects from versioning script.
allprojects {
	apply from: "$rootDir/gradle/versioning.gradle"
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'eclipse'


    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        mavenCentral()
    }
	dependencies {

		//test packages

		testCompile "junit:junit:$junitVersion"

	}
}

project(':cf-API-Microservice') {
	apply plugin: 'spring-boot'
    jar {
        baseName = 'api-microservice'
        version = '0.1'
    }
	description = "Micro-service to deal with API calls"

    dependencies {
    	compile 'org.springframework.cloud:spring-cloud-starter-eureka'
		compile("org.springframework.boot:spring-boot-starter-web")
		compile("org.springframework.boot:spring-boot-starter-actuator")
		compile("org.springframework.cloud:spring-cloud-starter-hystrix")
		compile("org.springframework.cloud:spring-cloud-starter-hystrix-dashboard")
        //compile("org.springframework.boot:spring-boot-starter-data-mongodb")
        //compile("org.springframework.boot:spring-boot-starter-data-jpa")
        compile("org.springframework.boot:spring-boot-starter-cloud-connectors")
        //compile("postgresql:postgresql:9.0-801.jdbc4")
        testCompile("org.springframework.boot:spring-boot-starter-test")
        
    }
    
    dependencyManagement {
     imports {
          mavenBom 'org.springframework.cloud:spring-cloud-netflix:1.0.7.RELEASE'
     }
	}
}

project(':cf-ClimateMicroService') {
	apply plugin: 'spring-boot'
    apply plugin: "io.spring.dependency-management"
    jar {
        baseName = 'climate-microservice'
        version = '0.1'
    }
	description = "Micro-service to collect temperture and humidity readings"

    dependencyManagement {
     imports {
          mavenBom 'org.springframework.cloud:spring-cloud-config:1.0.2.RELEASE'
          mavenBom 'org.springframework.cloud:spring-cloud-netflix:1.0.7.RELEASE'
     }
    }
    dependencies {
    	compile 'org.springframework.cloud:spring-cloud-starter-eureka'
        compile("org.springframework.boot:spring-boot-starter-web")
		compile("org.springframework.boot:spring-boot-starter-amqp")
        compile("org.springframework.boot:spring-boot-starter-data-mongodb")
        compile("org.springframework.cloud:spring-cloud-starter-config")
        //compile("org.springframework.boot:spring-boot-starter-cloud-connectors")
        testCompile("org.springframework.boot:spring-boot-starter-test")
    }
}

project(':cf-RFID-TiltSW-MicroService') {
	apply plugin: 'spring-boot'
    apply plugin: "io.spring.dependency-management"
    jar {
        baseName = 'sensors-microservice'
        version = '0.1'
    }
	description = "Micro-service to manage portfolios"
    dependencyManagement {
     imports {
          mavenBom 'org.springframework.cloud:spring-cloud-config:1.0.2.RELEASE'
          mavenBom 'org.springframework.cloud:spring-cloud-netflix:1.0.7.RELEASE'
     }
    }
    dependencies {
    	compile 'org.springframework.cloud:spring-cloud-starter-eureka'
        compile("org.springframework.boot:spring-boot-starter-web")
		compile("org.springframework.boot:spring-boot-starter-amqp")
        compile("org.springframework.boot:spring-boot-starter-data-jpa")
        compile("org.springframework.cloud:spring-cloud-starter-config")
        compile("mysql:mysql-connector-java:5.1.35")
        compile("postgresql:postgresql:9.0-801.jdbc4")
        compile("org.springframework.cloud:spring-cloud-config-server:")
        testCompile("org.springframework.boot:spring-boot-starter-test") 
    }
}

project(':cf-eureka-server') {
	apply plugin: 'spring-boot'

    jar {
        baseName = 'eureka-server'
        version = '0.1'
    }
	description = "Registry server for micro services"
    apply plugin: "io.spring.dependency-management"

   dependencyManagement {
     imports {
        mavenBom 'org.springframework.cloud:spring-cloud-starter-parent:Angel.SR6'
  		}
   }
    dependencies {
		compile 'org.springframework.cloud:spring-cloud-starter-eureka-server'
        testCompile("org.springframework.boot:spring-boot-starter-test") 
    }
}

project (':cf-cloud-config-server') {
     apply plugin: 'spring-boot'
     jar {
        baseName = 'cloud-config'
        version = '0.1'
     }
     description = "Config Server for micro services"

   apply plugin: "io.spring.dependency-management"

   dependencyManagement {
     imports {
        mavenBom "org.springframework.cloud:spring-cloud-starter-parent:${springCloudStarterParentTrain}"
     }
   }
     dependencies {
         compile("org.springframework.cloud:spring-cloud-config-server")
         testCompile("org.springframework.boot:spring-boot-starter-test") 
     }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}
